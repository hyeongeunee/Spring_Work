<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <!--    <mvc:default-servlet-hand/>-->
    <context:component-scan base-package="com.gura.spring" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="member" class="com.gura.spring.member.dao.MemberDaoImpl"/>

    <!--
      JNDI 데이터 소스 객체 얻어오는 설정
      Servers/context.xml 에 설정된 oracle 접속정보 가 있어야 된다.

      <Resource name="jdbc/myoracle" auth="Container"
              type="javax.sql.DataSource" driverClassName="oracle.jdbc.OracleDriver"
              url="jdbc:oracle:thin:@127.0.0.1:1521:xe"
              username="scott" password="tiger" maxTotal="20" maxIdle="10"
              maxWaitMillis="-1"/>
   -->

    <!--    <beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">-->
    <!--        <beans:property name="jndiName" value="java:comp/env/jdbc/myoracle" />-->
    <!--    </beans:bean>-->

    <beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="java:comp/env/jdbc/myoracle"/>
        <beans:property name="lookupOnStartup" value="false"/>
        <beans:property name="proxyInterface" value="javax.sql.DataSource"/>
    </beans:bean>

    <!--
       위는 아래의 코드와 같다
       dataSource = new JndiObjectFactoryBean();
       dataSource.setJndiName("java:comp/env/jdbc/myoracle");
     -->


    <!--
       SqlSessionFactory 객체
       Configuration.xml 문서가 어디에 있는지 알려야 한다.
       value 에서 classpath: 은  src/main/resources 폴더를 가리킨다.
       따라서  classpath:Configuration.xml 은  src/main/resources 폴더안에 존재 해야 한다.
    -->
    <beans:bean id="sessionFactory"
                class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="configLocation" value="classpath:Configuration.xml"/>
    </beans:bean>


    <!--
       sessionFactory=new SqlSessionFactoryBean();
       sessionFactory.setDataSource(dataSource);
       sessionFactory.setConfigLocation("classpath:Configuration.xml");
     -->


    <!--
       SqlSession 인터페이스를 구현한
       SqlSessionTemplate(SqlSession) 객체
       Dao 가 의존하는 객체
    -->
    <beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <beans:constructor-arg name="sqlSessionFactory"
                               ref="sessionFactory"/>
    </beans:bean>

    <!--
       위의 bean 설정을 java code 로 환산 하면 아래와 같다

       dataSource = new JndiObjectFactoryBean();
       dataSource.setJndiName("java:comp/env/jdbc/myoracle");

       sessionFactory=new SqlSessionFactoryBean();
       sessionFactory.setDataSource(dataSource);
       sessionFactory.setConfigLocation("classpath:xxx");

       new SqlSessionTemplate(sessionFactory);
     -->

    <!--
        [ 컴포넌트 스캔 ]

        com.gura.spring 패키지와 하위 패키지를 모두 탐색(scan) 해서

        spring 이 생성하고 관리할 객체를 찾아서 직접 생성하고 관리가 된다.

        찾는 기준 : @Controller, @Service, @Repository, @Component 등의
        어노테이션이 붙어 있는 클래스를 찾아서 bean 으로 만든다.
    -->

    <mvc:annotation-driven/>
</beans:beans>
